/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    `maven-publish`
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

java.sourceSets.create("domain") {
    java.srcDir("src/domain/java")
}

//tasks.register<Jar>("domain") {
//    from(sourceSets["domain"].output)
//}

java.sourceSets.create("cli") {
    java.srcDir("src/cli/java")
}

tasks.named<Jar>("jar") {
   from(sourceSets.get("domain").output) {
    into("domain")
   }
   from(sourceSets.get("cli").output) {
    into("cli")
   }
}

dependencies {
    // Use JUnit Jupiter for testing.
//    testImplementation(libs.junit.jupiter)

//    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
//    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

application {
    // Define the main class for the application.
    //mainClass.set("skillmatrix.cli/com.flaviusas.skillmatrix.ui.cli")
    mainClass.set("com.flaviusas.skillmatrix.ui.cli")
    mainModule.set("skillmatrix.cli")
}

java {
    modularity.inferModulePath.set(true)
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
//    useJUnitPlatform()
}

tasks.register("printSourceSetInformation") {
    doLast {
        sourceSets.all {
            println(name + "\t" + allJava.srcDirs)
        }
    }
}

/*
task printSourceSetInformation(){
    doLast{
        sourceSets.each { srcSet ->
            println "["+srcSet.name+"]"
            print "-->Source directories: "+srcSet.allJava.srcDirs+"\n"
            print "-->Output directories: "+srcSet.output.classesDirs.files+"\n"
            println ""
        }
    }
}
*/
